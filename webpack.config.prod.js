/* eslint-disable */
/* global __dirname */
/* generated by unstuck-webpack */

var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var PathRewriterPlugin = require('webpack-path-rewriter')
var CleanWebpackPlugin = require('clean-webpack-plugin');
var dir_js = path.resolve(__dirname, 'src/app');
var dir_css = path.resolve(__dirname, 'src/css');
var dir_build = path.resolve(__dirname, 'dist');

module.exports = {
    entry: {
      app : path.resolve(__dirname, 'src/index.js')
    },
    output: {
        path: dir_build,
        filename: 'bundle.[hash].js'
    },
    resolve: {
       modulesDirectories: ['node_modules', dir_js],
    },
    postcss: function () {
        return [require('autoprefixer')];
    },
    stats: {
        colors: true,
        chunkModules: false
    },
    plugins: [
        new CleanWebpackPlugin(['dist']),
        new ExtractTextPlugin("style.[hash].css", {  allChunks: true }),
        new PathRewriterPlugin({
          emitStats: false
        }),
        new webpack.DefinePlugin({
          'process.env': {
            'NODE_ENV': JSON.stringify('production')
          }
        }),
        new webpack.optimize.DedupePlugin(),
        new webpack.optimize.UglifyJsPlugin()
    ],

    module: {
        loaders: [
            {
                loader: 'file?name=assets/[name].[ext]',
                test: /\.png($|\?)|\.woff($|\?)|\.woff2($|\?)|\.ttf($|\?)|\.eot($|\?)|\.svg($|\?)/
            },
            {
                loader: 'babel-loader',
                test: /\.js($|\?)|\.jsx($|\?)/,
                exclude: /node_modules/,
                presets : ['es2015', 'react']
            },
            {
                loader: PathRewriterPlugin.rewriteAndEmit({
                  name: '[name].html'
                }),
                test: /\.html$/
            },
            {
                loader: ExtractTextPlugin.extract('style-loader', 'css-loader!postcss-loader!less-loader'),
                test: /\.less$/
            }
        ]
    }
}
