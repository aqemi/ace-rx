/* eslint-disable */
/* global __dirname */
/* generated by unstuck-webpack */
require('dotenv').config();
const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const git = require('git-rev-sync');
const dir_js = path.resolve(__dirname, 'src/app');
const dir_build = path.resolve(__dirname, 'dist');

module.exports.config = {
  entry: {
    app: path.resolve(__dirname, 'src/index.js'),
  },
  resolve: {
    modules: ['node_modules', dir_js],
  },
  stats: {
    colors: true,
    chunkModules: false,
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: path.resolve(__dirname, 'src/index.html'),
      templateParameters: {
        OG_TITLE: process.env.OG_TITLE,
        OG_DESCRIPTION: process.env.OG_DESCRIPTION,
        WEB_URL: process.env.WEB_URL,
      },
    }),
  ],
  module: {
    rules: [
      {
        loader: 'file-loader?name=assets/[name].[ext]',
        test: /\.png($|\?)|\.woff($|\?)|\.woff2($|\?)|\.ttf($|\?)|\.eot($|\?)|\.svg($|\?)/,
      },
      {
        loader: 'babel-loader',
        test: /\.js($|\?)|\.jsx($|\?)/,
        exclude: /node_modules/,
      },
    ],
  },
};

module.exports.getBrowserEnv = function getBrowserEnv() {
  return {
    VERSION: JSON.stringify(require('./package.json').version + '#' + git.short()),
    EMAIL_ADDRESS: JSON.stringify(Buffer.from(process.env.EMAIL_ADDRESS || '').toString('base64')),
    OG_TITLE: JSON.stringify(process.env.OG_TITLE),
    WEB_URL: JSON.stringify(process.env.WEB_URL),
    API_URL: JSON.stringify(process.env.API_URL),
    TG_LINK: JSON.stringify(process.env.TG_LINK),
    GH_LINK: JSON.stringify(process.env.GH_LINK),
    YM_ACCOUNT_ID: JSON.stringify(process.env.YM_ACCOUNT_ID),
  };
};
